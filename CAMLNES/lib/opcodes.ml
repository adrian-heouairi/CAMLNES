type addressing_mode =
  Immediate | Implicit | Absolute | AbsoluteX | AbsoluteY
  | ZeroPage | ZeroPageX | ZeroPageY | Accumulator
  | Relative | IndirectX | IndirectY | Indirect;;

let addressing_mode_needed_bytes = Hashtbl.create 13;;

Hashtbl.add addressing_mode_needed_bytes Immediate 2;;
Hashtbl.add addressing_mode_needed_bytes Implicit 1;;
Hashtbl.add addressing_mode_needed_bytes Absolute 3;;
Hashtbl.add addressing_mode_needed_bytes AbsoluteX 3;;
Hashtbl.add addressing_mode_needed_bytes AbsoluteY 3;;
Hashtbl.add addressing_mode_needed_bytes ZeroPage 2;;
Hashtbl.add addressing_mode_needed_bytes ZeroPageX 2;;
Hashtbl.add addressing_mode_needed_bytes ZeroPageY 2;;
Hashtbl.add addressing_mode_needed_bytes Accumulator 1;;
Hashtbl.add addressing_mode_needed_bytes Relative 2;;
Hashtbl.add addressing_mode_needed_bytes IndirectX 2;;
Hashtbl.add addressing_mode_needed_bytes IndirectY 2;;
Hashtbl.add addressing_mode_needed_bytes Indirect 3;;

type instruction = ADC | AND | ASL | BCC | BCS | BEQ | BIT | BMI | BNE | BPL | BRK
| BVC | BVS | CLC | CLD | CLI | CLV | CMP | CPX | CPY | DEC | DEX
| DEY | EOR | INC | INX | INY | JMP | JSR | LDA | LDX | LDY | LSR
| NOP | ORA | PHA | PHP | PLA | PLP | ROL | ROR | RTI | RTS | SBC
| SEC | SED | SEI | STA | STX | STY | TAX | TAY | TSX | TXA | TXS | TYA;;

type instruction_and_addressing_mode = {
  instruction : instruction;
  addressing_mode : addressing_mode
};;

let instructions_table = Hashtbl.create 151;;

Hashtbl.add instructions_table 0x69 { instruction = ADC; addressing_mode = Immediate };;
Hashtbl.add instructions_table 0x65 { instruction = ADC; addressing_mode = ZeroPage };;
Hashtbl.add instructions_table 0x75 { instruction = ADC; addressing_mode = ZeroPageX };;
Hashtbl.add instructions_table 0x6D { instruction = ADC; addressing_mode = Absolute };;
Hashtbl.add instructions_table 0x7D { instruction = ADC; addressing_mode = AbsoluteX };;
Hashtbl.add instructions_table 0x79 { instruction = ADC; addressing_mode = AbsoluteY };;
Hashtbl.add instructions_table 0x61 { instruction = ADC; addressing_mode = IndirectX };;
Hashtbl.add instructions_table 0x71 { instruction = ADC; addressing_mode = IndirectY };;
Hashtbl.add instructions_table 0x29 { instruction = AND; addressing_mode = Immediate };;
Hashtbl.add instructions_table 0x25 { instruction = AND; addressing_mode = ZeroPage };;
Hashtbl.add instructions_table 0x35 { instruction = AND; addressing_mode = ZeroPageX };;
Hashtbl.add instructions_table 0x2D { instruction = AND; addressing_mode = Absolute };;
Hashtbl.add instructions_table 0x3D { instruction = AND; addressing_mode = AbsoluteX };;
Hashtbl.add instructions_table 0x39 { instruction = AND; addressing_mode = AbsoluteY };;
Hashtbl.add instructions_table 0x21 { instruction = AND; addressing_mode = IndirectX };;
Hashtbl.add instructions_table 0x31 { instruction = AND; addressing_mode = IndirectY };;
Hashtbl.add instructions_table 0x0A { instruction = ASL; addressing_mode = Accumulator };;
Hashtbl.add instructions_table 0x06 { instruction = ASL; addressing_mode = ZeroPage };;
Hashtbl.add instructions_table 0x16 { instruction = ASL; addressing_mode = ZeroPageX };;
Hashtbl.add instructions_table 0x0E { instruction = ASL; addressing_mode = Absolute };;
Hashtbl.add instructions_table 0x1E { instruction = ASL; addressing_mode = AbsoluteX };;
Hashtbl.add instructions_table 0x90 { instruction = BCC; addressing_mode = Relative };;
Hashtbl.add instructions_table 0xB0 { instruction = BCS; addressing_mode = Relative };;
Hashtbl.add instructions_table 0xF0 { instruction = BEQ; addressing_mode = Relative };;
Hashtbl.add instructions_table 0x24 { instruction = BIT; addressing_mode = ZeroPage };;
Hashtbl.add instructions_table 0x2C { instruction = BIT; addressing_mode = Absolute };;
Hashtbl.add instructions_table 0x30 { instruction = BMI; addressing_mode = Relative };;
Hashtbl.add instructions_table 0xD0 { instruction = BNE; addressing_mode = Relative };;
Hashtbl.add instructions_table 0x10 { instruction = BPL; addressing_mode = Relative };;
Hashtbl.add instructions_table 0x00 { instruction = BRK; addressing_mode = Implicit };;
Hashtbl.add instructions_table 0x50 { instruction = BVC; addressing_mode = Relative };;
Hashtbl.add instructions_table 0x70 { instruction = BVS; addressing_mode = Relative };;
Hashtbl.add instructions_table 0x18 { instruction = CLC; addressing_mode = Implicit };;
Hashtbl.add instructions_table 0xD8 { instruction = CLD; addressing_mode = Implicit };;
Hashtbl.add instructions_table 0x58 { instruction = CLI; addressing_mode = Implicit };;
Hashtbl.add instructions_table 0xB8 { instruction = CLV; addressing_mode = Implicit };;
Hashtbl.add instructions_table 0xC9 { instruction = CMP; addressing_mode = Immediate };;
Hashtbl.add instructions_table 0xC5 { instruction = CMP; addressing_mode = ZeroPage };;
Hashtbl.add instructions_table 0xD5 { instruction = CMP; addressing_mode = ZeroPageX };;
Hashtbl.add instructions_table 0xCD { instruction = CMP; addressing_mode = Absolute };;
Hashtbl.add instructions_table 0xDD { instruction = CMP; addressing_mode = AbsoluteX };;
Hashtbl.add instructions_table 0xD9 { instruction = CMP; addressing_mode = AbsoluteY };;
Hashtbl.add instructions_table 0xC1 { instruction = CMP; addressing_mode = IndirectX };;
Hashtbl.add instructions_table 0xD1 { instruction = CMP; addressing_mode = IndirectY };;
Hashtbl.add instructions_table 0xE0 { instruction = CPX; addressing_mode = Immediate };;
Hashtbl.add instructions_table 0xE4 { instruction = CPX; addressing_mode = ZeroPage };;
Hashtbl.add instructions_table 0xEC { instruction = CPX; addressing_mode = Absolute };;
Hashtbl.add instructions_table 0xC0 { instruction = CPY; addressing_mode = Immediate };;
Hashtbl.add instructions_table 0xC4 { instruction = CPY; addressing_mode = ZeroPage };;
Hashtbl.add instructions_table 0xCC { instruction = CPY; addressing_mode = Absolute };;
Hashtbl.add instructions_table 0xC6 { instruction = DEC; addressing_mode = ZeroPage };;
Hashtbl.add instructions_table 0xD6 { instruction = DEC; addressing_mode = ZeroPageX };;
Hashtbl.add instructions_table 0xCE { instruction = DEC; addressing_mode = Absolute };;
Hashtbl.add instructions_table 0xDE { instruction = DEC; addressing_mode = AbsoluteX };;
Hashtbl.add instructions_table 0xCA { instruction = DEX; addressing_mode = Implicit };;
Hashtbl.add instructions_table 0x88 { instruction = DEY; addressing_mode = Implicit };;
Hashtbl.add instructions_table 0x49 { instruction = EOR; addressing_mode = Immediate };;
Hashtbl.add instructions_table 0x45 { instruction = EOR; addressing_mode = ZeroPage };;
Hashtbl.add instructions_table 0x55 { instruction = EOR; addressing_mode = ZeroPageX };;
Hashtbl.add instructions_table 0x4D { instruction = EOR; addressing_mode = Absolute };;
Hashtbl.add instructions_table 0x5D { instruction = EOR; addressing_mode = AbsoluteX };;
Hashtbl.add instructions_table 0x59 { instruction = EOR; addressing_mode = AbsoluteY };;
Hashtbl.add instructions_table 0x41 { instruction = EOR; addressing_mode = IndirectX };;
Hashtbl.add instructions_table 0x51 { instruction = EOR; addressing_mode = IndirectY };;
Hashtbl.add instructions_table 0xE6 { instruction = INC; addressing_mode = ZeroPage };;
Hashtbl.add instructions_table 0xF6 { instruction = INC; addressing_mode = ZeroPageX };;
Hashtbl.add instructions_table 0xEE { instruction = INC; addressing_mode = Absolute };;
Hashtbl.add instructions_table 0xFE { instruction = INC; addressing_mode = AbsoluteX };;
Hashtbl.add instructions_table 0xE8 { instruction = INX; addressing_mode = Implicit };;
Hashtbl.add instructions_table 0xC8 { instruction = INY; addressing_mode = Implicit };;
Hashtbl.add instructions_table 0x4C { instruction = JMP; addressing_mode = Absolute };;
Hashtbl.add instructions_table 0x6C { instruction = JMP; addressing_mode = Indirect };;
Hashtbl.add instructions_table 0x20 { instruction = JSR; addressing_mode = Absolute };;
Hashtbl.add instructions_table 0xA9 { instruction = LDA; addressing_mode = Immediate };;
Hashtbl.add instructions_table 0xA5 { instruction = LDA; addressing_mode = ZeroPage };;
Hashtbl.add instructions_table 0xB5 { instruction = LDA; addressing_mode = ZeroPageX };;
Hashtbl.add instructions_table 0xAD { instruction = LDA; addressing_mode = Absolute };;
Hashtbl.add instructions_table 0xBD { instruction = LDA; addressing_mode = AbsoluteX };;
Hashtbl.add instructions_table 0xB9 { instruction = LDA; addressing_mode = AbsoluteY };;
Hashtbl.add instructions_table 0xA1 { instruction = LDA; addressing_mode = IndirectX };;
Hashtbl.add instructions_table 0xB1 { instruction = LDA; addressing_mode = IndirectY };;
Hashtbl.add instructions_table 0xA2 { instruction = LDX; addressing_mode = Immediate };;
Hashtbl.add instructions_table 0xA6 { instruction = LDX; addressing_mode = ZeroPage };;
Hashtbl.add instructions_table 0xB6 { instruction = LDX; addressing_mode = ZeroPageY };;
Hashtbl.add instructions_table 0xAE { instruction = LDX; addressing_mode = Absolute };;
Hashtbl.add instructions_table 0xBE { instruction = LDX; addressing_mode = AbsoluteY };;
Hashtbl.add instructions_table 0xA0 { instruction = LDY; addressing_mode = Immediate };;
Hashtbl.add instructions_table 0xA4 { instruction = LDY; addressing_mode = ZeroPage };;
Hashtbl.add instructions_table 0xB4 { instruction = LDY; addressing_mode = ZeroPageX };;
Hashtbl.add instructions_table 0xAC { instruction = LDY; addressing_mode = Absolute };;
Hashtbl.add instructions_table 0xBC { instruction = LDY; addressing_mode = AbsoluteX };;
Hashtbl.add instructions_table 0x4A { instruction = LSR; addressing_mode = Accumulator };;
Hashtbl.add instructions_table 0x46 { instruction = LSR; addressing_mode = ZeroPage };;
Hashtbl.add instructions_table 0x56 { instruction = LSR; addressing_mode = ZeroPageX };;
Hashtbl.add instructions_table 0x4E { instruction = LSR; addressing_mode = Absolute };;
Hashtbl.add instructions_table 0x5E { instruction = LSR; addressing_mode = AbsoluteX };;
Hashtbl.add instructions_table 0xEA { instruction = NOP; addressing_mode = Implicit };;
Hashtbl.add instructions_table 0x09 { instruction = ORA; addressing_mode = Immediate };;
Hashtbl.add instructions_table 0x05 { instruction = ORA; addressing_mode = ZeroPage };;
Hashtbl.add instructions_table 0x15 { instruction = ORA; addressing_mode = ZeroPageX };;
Hashtbl.add instructions_table 0x0D { instruction = ORA; addressing_mode = Absolute };;
Hashtbl.add instructions_table 0x1D { instruction = ORA; addressing_mode = AbsoluteX };;
Hashtbl.add instructions_table 0x19 { instruction = ORA; addressing_mode = AbsoluteY };;
Hashtbl.add instructions_table 0x01 { instruction = ORA; addressing_mode = IndirectX };;
Hashtbl.add instructions_table 0x11 { instruction = ORA; addressing_mode = IndirectY };;
Hashtbl.add instructions_table 0x48 { instruction = PHA; addressing_mode = Implicit };;
Hashtbl.add instructions_table 0x08 { instruction = PHP; addressing_mode = Implicit };;
Hashtbl.add instructions_table 0x68 { instruction = PLA; addressing_mode = Implicit };;
Hashtbl.add instructions_table 0x28 { instruction = PLP; addressing_mode = Implicit };;
Hashtbl.add instructions_table 0x2A { instruction = ROL; addressing_mode = Accumulator };;
Hashtbl.add instructions_table 0x26 { instruction = ROL; addressing_mode = ZeroPage };;
Hashtbl.add instructions_table 0x36 { instruction = ROL; addressing_mode = ZeroPageX };;
Hashtbl.add instructions_table 0x2E { instruction = ROL; addressing_mode = Absolute };;
Hashtbl.add instructions_table 0x3E { instruction = ROL; addressing_mode = AbsoluteX };;
Hashtbl.add instructions_table 0x6A { instruction = ROR; addressing_mode = Accumulator };;
Hashtbl.add instructions_table 0x66 { instruction = ROR; addressing_mode = ZeroPage };;
Hashtbl.add instructions_table 0x76 { instruction = ROR; addressing_mode = ZeroPageX };;
Hashtbl.add instructions_table 0x6E { instruction = ROR; addressing_mode = Absolute };;
Hashtbl.add instructions_table 0x7E { instruction = ROR; addressing_mode = AbsoluteX };;
Hashtbl.add instructions_table 0x40 { instruction = RTI; addressing_mode = Implicit };;
Hashtbl.add instructions_table 0x60 { instruction = RTS; addressing_mode = Implicit };;
Hashtbl.add instructions_table 0xE9 { instruction = SBC; addressing_mode = Immediate };;
Hashtbl.add instructions_table 0xE5 { instruction = SBC; addressing_mode = ZeroPage };;
Hashtbl.add instructions_table 0xF5 { instruction = SBC; addressing_mode = ZeroPageX };;
Hashtbl.add instructions_table 0xED { instruction = SBC; addressing_mode = Absolute };;
Hashtbl.add instructions_table 0xFD { instruction = SBC; addressing_mode = AbsoluteX };;
Hashtbl.add instructions_table 0xF9 { instruction = SBC; addressing_mode = AbsoluteY };;
Hashtbl.add instructions_table 0xE1 { instruction = SBC; addressing_mode = IndirectX };;
Hashtbl.add instructions_table 0xF1 { instruction = SBC; addressing_mode = IndirectY };;
Hashtbl.add instructions_table 0x38 { instruction = SEC; addressing_mode = Implicit };;
Hashtbl.add instructions_table 0xF8 { instruction = SED; addressing_mode = Implicit };;
Hashtbl.add instructions_table 0x78 { instruction = SEI; addressing_mode = Implicit };;
Hashtbl.add instructions_table 0x85 { instruction = STA; addressing_mode = ZeroPage };;
Hashtbl.add instructions_table 0x95 { instruction = STA; addressing_mode = ZeroPageX };;
Hashtbl.add instructions_table 0x8D { instruction = STA; addressing_mode = Absolute };;
Hashtbl.add instructions_table 0x9D { instruction = STA; addressing_mode = AbsoluteX };;
Hashtbl.add instructions_table 0x99 { instruction = STA; addressing_mode = AbsoluteY };;
Hashtbl.add instructions_table 0x81 { instruction = STA; addressing_mode = IndirectX };;
Hashtbl.add instructions_table 0x91 { instruction = STA; addressing_mode = IndirectY };;
Hashtbl.add instructions_table 0x86 { instruction = STX; addressing_mode = ZeroPage };;
Hashtbl.add instructions_table 0x96 { instruction = STX; addressing_mode = ZeroPageY };;
Hashtbl.add instructions_table 0x8E { instruction = STX; addressing_mode = Absolute };;
Hashtbl.add instructions_table 0x84 { instruction = STY; addressing_mode = ZeroPage };;
Hashtbl.add instructions_table 0x94 { instruction = STY; addressing_mode = ZeroPageX };;
Hashtbl.add instructions_table 0x8C { instruction = STY; addressing_mode = Absolute };;
Hashtbl.add instructions_table 0xAA { instruction = TAX; addressing_mode = Implicit };;
Hashtbl.add instructions_table 0xA8 { instruction = TAY; addressing_mode = Implicit };;
Hashtbl.add instructions_table 0xBA { instruction = TSX; addressing_mode = Implicit };;
Hashtbl.add instructions_table 0x8A { instruction = TXA; addressing_mode = Implicit };;
Hashtbl.add instructions_table 0x9A { instruction = TXS; addressing_mode = Implicit };;
Hashtbl.add instructions_table 0x98 { instruction = TYA; addressing_mode = Implicit };;







(*
type instruction = {
    Hashtbl.add instructions_tableressing_mode : addressing_mode;
    byte : int
}

let adc_Immediate = { addressing_mode = Immediate; byte = 0x69 };;
let adc_ZeroPage = { addressing_mode = ZeroPage; byte = 0x65 };;
let adc_ZeroPageX = { addressing_mode = ZeroPageX; byte = 0x75 };;
let adc_Absolute = { addressing_mode = Absolute; byte = 0x6D };;
let adc_AbsoluteX = { addressing_mode = AbsoluteX; byte = 0x7D };;
let adc_AbsoluteY = { addressing_mode = AbsoluteY; byte = 0x79 };;
let adc_IndirectX = { addressing_mode = IndirectX; byte = 0x61 };;
let adc_IndirectY = { addressing_mode = IndirectY; byte = 0x71 };;
let and_Immediate = { addressing_mode = Immediate; byte = 0x29 };;
let and_ZeroPage = { addressing_mode = ZeroPage; byte = 0x25 };;
let and_ZeroPageX = { addressing_mode = ZeroPageX; byte = 0x35 };;
let and_Absolute = { addressing_mode = Absolute; byte = 0x2D };;
let and_AbsoluteX = { addressing_mode = AbsoluteX; byte = 0x3D };;
let and_AbsoluteY = { addressing_mode = AbsoluteY; byte = 0x39 };;
let and_IndirectX = { addressing_mode = IndirectX; byte = 0x21 };;
let and_IndirectY = { addressing_mode = IndirectY; byte = 0x31 };;
let asl_Accumulator = { addressing_mode = Accumulator; byte = 0x0A };;
let asl_ZeroPage = { addressing_mode = ZeroPage; byte = 0x06 };;
let asl_ZeroPageX = { addressing_mode = ZeroPageX; byte = 0x16 };;
let asl_Absolute = { addressing_mode = Absolute; byte = 0x0E };;
let asl_AbsoluteX = { addressing_mode = AbsoluteX; byte = 0x1E };;
let bcc_Relative = { addressing_mode = Relative; byte = 0x90 };;
let bcs_Relative = { addressing_mode = Relative; byte = 0xB0 };;
let beq_Relative = { addressing_mode = Relative; byte = 0xF0 };;
let bit_ZeroPage = { addressing_mode = ZeroPage; byte = 0x24 };;
let bit_Absolute = { addressing_mode = Absolute; byte = 0x2C };;
let bmi_Relative = { addressing_mode = Relative; byte = 0x30 };;
let bne_Relative = { addressing_mode = Relative; byte = 0xD0 };;
let bpl_Relative = { addressing_mode = Relative; byte = 0x10 };;
let brk_Implicit = { addressing_mode = Implicit; byte = 0x00 };;
let bvc_Relative = { addressing_mode = Relative; byte = 0x50 };;
let bvs_Relative = { addressing_mode = Relative; byte = 0x70 };;
let clc_Implicit = { addressing_mode = Implicit; byte = 0x18 };;
let cld_Implicit = { addressing_mode = Implicit; byte = 0xD8 };;
let cli_Implicit = { addressing_mode = Implicit; byte = 0x58 };;
let clv_Implicit = { addressing_mode = Implicit; byte = 0xB8 };;
let cmp_Immediate = { addressing_mode = Immediate; byte = 0xC9 };;
let cmp_ZeroPage = { addressing_mode = ZeroPage; byte = 0xC5 };;
let cmp_ZeroPageX = { addressing_mode = ZeroPageX; byte = 0xD5 };;
let cmp_Absolute = { addressing_mode = Absolute; byte = 0xCD };;
let cmp_AbsoluteX = { addressing_mode = AbsoluteX; byte = 0xDD };;
let cmp_AbsoluteY = { addressing_mode = AbsoluteY; byte = 0xD9 };;
let cmp_IndirectX = { addressing_mode = IndirectX; byte = 0xC1 };;
let cmp_IndirectY = { addressing_mode = IndirectY; byte = 0xD1 };;
let cpx_Immediate = { addressing_mode = Immediate; byte = 0xE0 };;
let cpx_ZeroPage = { addressing_mode = ZeroPage; byte = 0xE4 };;
let cpx_Absolute = { addressing_mode = Absolute; byte = 0xEC };;
let cpy_Immediate = { addressing_mode = Immediate; byte = 0xC0 };;
let cpy_ZeroPage = { addressing_mode = ZeroPage; byte = 0xC4 };;
let cpy_Absolute = { addressing_mode = Absolute; byte = 0xCC };;
let dec_ZeroPage = { addressing_mode = ZeroPage; byte = 0xC6 };;
let dec_ZeroPageX = { addressing_mode = ZeroPageX; byte = 0xD6 };;
let dec_Absolute = { addressing_mode = Absolute; byte = 0xCE };;
let dec_AbsoluteX = { addressing_mode = AbsoluteX; byte = 0xDE };;
let dex_Implicit = { addressing_mode = Implicit; byte = 0xCA };;
let dey_Implicit = { addressing_mode = Implicit; byte = 0x88 };;
let eor_Immediate = { addressing_mode = Immediate; byte = 0x49 };;
let eor_ZeroPage = { addressing_mode = ZeroPage; byte = 0x45 };;
let eor_ZeroPageX = { addressing_mode = ZeroPageX; byte = 0x55 };;
let eor_Absolute = { addressing_mode = Absolute; byte = 0x4D };;
let eor_AbsoluteX = { addressing_mode = AbsoluteX; byte = 0x5D };;
let eor_AbsoluteY = { addressing_mode = AbsoluteY; byte = 0x59 };;
let eor_IndirectX = { addressing_mode = IndirectX; byte = 0x41 };;
let eor_IndirectY = { addressing_mode = IndirectY; byte = 0x51 };;
let inc_ZeroPage = { addressing_mode = ZeroPage; byte = 0xE6 };;
let inc_ZeroPageX = { addressing_mode = ZeroPageX; byte = 0xF6 };;
let inc_Absolute = { addressing_mode = Absolute; byte = 0xEE };;
let inc_AbsoluteX = { addressing_mode = AbsoluteX; byte = 0xFE };;
let inx_Implicit = { addressing_mode = Implicit; byte = 0xE8 };;
let iny_Implicit = { addressing_mode = Implicit; byte = 0xC8 };;
let jmp_Absolute = { addressing_mode = Absolute; byte = 0x4C };;
let jmp_Indirect = { addressing_mode = Indirect; byte = 0x6C };;
let jsr_Absolute = { addressing_mode = Absolute; byte = 0x20 };;
let lda_Immediate = { addressing_mode = Immediate; byte = 0xA9 };;
let lda_ZeroPage = { addressing_mode = ZeroPage; byte = 0xA5 };;
let lda_ZeroPageX = { addressing_mode = ZeroPageX; byte = 0xB5 };;
let lda_Absolute = { addressing_mode = Absolute; byte = 0xAD };;
let lda_AbsoluteX = { addressing_mode = AbsoluteX; byte = 0xBD };;
let lda_AbsoluteY = { addressing_mode = AbsoluteY; byte = 0xB9 };;
let lda_IndirectX = { addressing_mode = IndirectX; byte = 0xA1 };;
let lda_IndirectY = { addressing_mode = IndirectY; byte = 0xB1 };;
let ldx_Immediate = { addressing_mode = Immediate; byte = 0xA2 };;
let ldx_ZeroPage = { addressing_mode = ZeroPage; byte = 0xA6 };;
let ldx_ZeroPageY = { addressing_mode = ZeroPageY; byte = 0xB6 };;
let ldx_Absolute = { addressing_mode = Absolute; byte = 0xAE };;
let ldx_AbsoluteY = { addressing_mode = AbsoluteY; byte = 0xBE };;
let ldy_Immediate = { addressing_mode = Immediate; byte = 0xA0 };;
let ldy_ZeroPage = { addressing_mode = ZeroPage; byte = 0xA4 };;
let ldy_ZeroPageX = { addressing_mode = ZeroPageX; byte = 0xB4 };;
let ldy_Absolute = { addressing_mode = Absolute; byte = 0xAC };;
let ldy_AbsoluteX = { addressing_mode = AbsoluteX; byte = 0xBC };;
let lsr_Accumulator = { addressing_mode = Accumulator; byte = 0x4A };;
let lsr_ZeroPage = { addressing_mode = ZeroPage; byte = 0x46 };;
let lsr_ZeroPageX = { addressing_mode = ZeroPageX; byte = 0x56 };;
let lsr_Absolute = { addressing_mode = Absolute; byte = 0x4E };;
let lsr_AbsoluteX = { addressing_mode = AbsoluteX; byte = 0x5E };;
let nop_Implicit = { addressing_mode = Implicit; byte = 0xEA };;
let ora_Immediate = { addressing_mode = Immediate; byte = 0x09 };;
let ora_ZeroPage = { addressing_mode = ZeroPage; byte = 0x05 };;
let ora_ZeroPageX = { addressing_mode = ZeroPageX; byte = 0x15 };;
let ora_Absolute = { addressing_mode = Absolute; byte = 0x0D };;
let ora_AbsoluteX = { addressing_mode = AbsoluteX; byte = 0x1D };;
let ora_AbsoluteY = { addressing_mode = AbsoluteY; byte = 0x19 };;
let ora_IndirectX = { addressing_mode = IndirectX; byte = 0x01 };;
let ora_IndirectY = { addressing_mode = IndirectY; byte = 0x11 };;
let pha_Implicit = { addressing_mode = Implicit; byte = 0x48 };;
let php_Implicit = { addressing_mode = Implicit; byte = 0x08 };;
let pla_Implicit = { addressing_mode = Implicit; byte = 0x68 };;
let plp_Implicit = { addressing_mode = Implicit; byte = 0x28 };;
let rol_Accumulator = { addressing_mode = Accumulator; byte = 0x2A };;
let rol_ZeroPage = { addressing_mode = ZeroPage; byte = 0x26 };;
let rol_ZeroPageX = { addressing_mode = ZeroPageX; byte = 0x36 };;
let rol_Absolute = { addressing_mode = Absolute; byte = 0x2E };;
let rol_AbsoluteX = { addressing_mode = AbsoluteX; byte = 0x3E };;
let ror_Accumulator = { addressing_mode = Accumulator; byte = 0x6A };;
let ror_ZeroPage = { addressing_mode = ZeroPage; byte = 0x66 };;
let ror_ZeroPageX = { addressing_mode = ZeroPageX; byte = 0x76 };;
let ror_Absolute = { addressing_mode = Absolute; byte = 0x6E };;
let ror_AbsoluteX = { addressing_mode = AbsoluteX; byte = 0x7E };;
let rti_Implicit = { addressing_mode = Implicit; byte = 0x40 };;
let rts_Implicit = { addressing_mode = Implicit; byte = 0x60 };;
let sbc_Immediate = { addressing_mode = Immediate; byte = 0xE9 };;
let sbc_ZeroPage = { addressing_mode = ZeroPage; byte = 0xE5 };;
let sbc_ZeroPageX = { addressing_mode = ZeroPageX; byte = 0xF5 };;
let sbc_Absolute = { addressing_mode = Absolute; byte = 0xED };;
let sbc_AbsoluteX = { addressing_mode = AbsoluteX; byte = 0xFD };;
let sbc_AbsoluteY = { addressing_mode = AbsoluteY; byte = 0xF9 };;
let sbc_IndirectX = { addressing_mode = IndirectX; byte = 0xE1 };;
let sbc_IndirectY = { addressing_mode = IndirectY; byte = 0xF1 };;
let sec_Implicit = { addressing_mode = Implicit; byte = 0x38 };;
let sed_Implicit = { addressing_mode = Implicit; byte = 0xF8 };;
let sei_Implicit = { addressing_mode = Implicit; byte = 0x78 };;
let sta_ZeroPage = { addressing_mode = ZeroPage; byte = 0x85 };;
let sta_ZeroPageX = { addressing_mode = ZeroPageX; byte = 0x95 };;
let sta_Absolute = { addressing_mode = Absolute; byte = 0x8D };;
let sta_AbsoluteX = { addressing_mode = AbsoluteX; byte = 0x9D };;
let sta_AbsoluteY = { addressing_mode = AbsoluteY; byte = 0x99 };;
let sta_IndirectX = { addressing_mode = IndirectX; byte = 0x81 };;
let sta_IndirectY = { addressing_mode = IndirectY; byte = 0x91 };;
let stx_ZeroPage = { addressing_mode = ZeroPage; byte = 0x86 };;
let stx_ZeroPageY = { addressing_mode = ZeroPageY; byte = 0x96 };;
let stx_Absolute = { addressing_mode = Absolute; byte = 0x8E };;
let sty_ZeroPage = { addressing_mode = ZeroPage; byte = 0x84 };;
let sty_ZeroPageX = { addressing_mode = ZeroPageX; byte = 0x94 };;
let sty_Absolute = { addressing_mode = Absolute; byte = 0x8C };;
let tax_Implicit = { addressing_mode = Implicit; byte = 0xAA };;
let tay_Implicit = { addressing_mode = Implicit; byte = 0xA8 };;
let tsx_Implicit = { addressing_mode = Implicit; byte = 0xBA };;
let txa_Implicit = { addressing_mode = Implicit; byte = 0x8A };;
let txs_Implicit = { addressing_mode = Implicit; byte = 0x9A };;
let tya_Implicit = { addressing_mode = Implicit; byte = 0x98 };;
*)